import numpy as np
import pandas as pd
from datetime import datetime, timedelta
from google.colab import files

np.random.seed(39)

# Parámetros de generación de datos
Fecha_inicio = datetime(2024, 5, 20, 16, 0)
Dias = 365
Muestra_diaria = 60
Rango_normal = (2.7, 3.8)
Pico_min_normal = 2.5
Pico_max_normal = 4
Rango_alto = (4.1, 6.3)
Pico_min_alto = 4.05
Pico_max_alto = 6.5


def generate_daily_vibration_data(Fecha_inicio, Muestra_diaria, Rango_normal, Pico_min_normal, Pico_max_normal, Rango_alto, Pico_min_alto, Pico_max_alto):
    tiempo = []
    vibracion = []

    for i in range(Muestra_diaria):
        tiempo.append(Fecha_inicio + timedelta(minutes=24*i))
        if i < 12000:
            if np.random.rand() < 0.5:
                pico_vibracion = np.random.uniform(Pico_min_normal, Pico_max_normal)
            else:
                pico_vibracion = np.random.uniform(Rango_normal[0], Rango_normal[1])
        else:
            if np.random.rand() < 0.7:
                pico_vibracion = np.random.uniform(Pico_min_alto, Pico_max_alto)
            else:
                pico_vibracion = np.random.uniform(Rango_alto[0], Rango_alto[1])
        vibracion.append(pico_vibracion)

    return tiempo, vibracion

tiempo_total = []
vibracion_total = []

for i in range(Dias):
    Dia_inicio = Fecha_inicio + timedelta(days=i)
    time_day, Vibracion_dia = generate_daily_vibration_data(Dia_inicio, Muestra_diaria, Rango_normal, Pico_min_normal, Pico_max_normal, Rango_alto, Pico_min_alto, Pico_max_alto)
    tiempo_total.extend(time_day)
    vibracion_total.extend(Vibracion_dia)


for i in range(20400, 20500):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(2.4,4.2))
    vibracion_total[i] = min(vibracion_total[i], 5)
for i in range(20500, 20600):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(2.6,4.4))
    vibracion_total[i] = min(vibracion_total[i], 5)
for i in range(20600, 20700):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(2.8,4.6))
    vibracion_total[i] = min(vibracion_total[i], 5.3)
for i in range(20700, 20800):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(3,4.8))
    vibracion_total[i] = min(vibracion_total[i], 5.3)
for i in range(20800, 21000):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(3.2,5))
    vibracion_total[i] = min(vibracion_total[i], 5.9)
for i in range(21000, 21150):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(3.4,5.2))
    vibracion_total[i] = min(vibracion_total[i], 6.4)
for i in range(21150, 21300):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(3.6,5.4))
    vibracion_total[i] = min(vibracion_total[i], 6.4)
for i in range(21300, 21500):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(3.8,5.6))
    vibracion_total[i] = min(vibracion_total[i], 6.4)
for i in range(21500, 21600):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(4,5.8))
    vibracion_total[i] = min(vibracion_total[i], 6.4)
for i in range(21600, 21700):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(4.2,6))
    vibracion_total[i] = min(vibracion_total[i], 6.4)
for i in range(21700, len(vibracion_total)):
    vibracion_total[i] = max(vibracion_total[i], np.random.uniform(Rango_alto[0], Rango_alto[1]))
    vibracion_total[i] = min(vibracion_total[i], Pico_max_alto)
for i in range(217):
    index = np.random.randint(1000, 20000)
    vibracion_total[index] = np.nan
for i in range(80):
    index = np.random.randint(200, 20000)
    vibracion_total[index] = np.random.uniform(4.1, 4.8)
observacion = list(range(1, len(vibracion_total) + 1))
df = pd.DataFrame({'Index': observacion, 'DateTime': tiempo_total, 'Velocity (mm/s)': vibracion_total})
VibracionNoPrep = 'Vibracion_NoPreprocesada_cat1_menor200kw.csv'
df.to_csv (VibracionNoPrep, index=False)
files.download(VibracionNoPrep)
